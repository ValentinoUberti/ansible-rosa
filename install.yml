#
# init
#
- name:         "init"
  hosts:        localhost
  connection:   local
  gather_facts: true
  tags:
    - always

  tasks:
    - name: "set a state fact"
      ansible.builtin.set_fact:
        state: present

    # - name: "include variables"
    #   ansible.builtin.include_vars:
    #     dir: vars/
    - ansible.builtin.set_fact:
        ansible_python_interpreter: ./virtualenv/bin/python
        staging_dir: "{{ playbook_dir }}/staging"

    - name: "get the aws account id"
      aws_caller_info:
      register: _aws_caller_info

    - ansible.builtin.set_fact:
        aws_account_id: "{{ _aws_caller_info.account }}"

- hosts:      "all"
  connection: "local"
  # vars_files:
  #     - vars/main.yaml

  roles:
    - name: roles/_vars
    - name: roles/network_math
    # - name: roles/tgw_create
    #   when: rosa_tgw_enabled | bool
    # - name: roles/egress_vpc_create
    #   when: rosa_egress_vpc_enabled | bool
    - name: roles/rosa_vpc
      vars:
        rosa_vpc:
          name: "rosa-{{ cluster_name }}-vpc"
          region: "{{ rosa_region }}"
          cidr: "{{ rosa_vpc_cidr }}"
          tgw_id: "{{ tgw_id | default('')}}"
          private_subnets: "{{ rosa_vpc_private_subnets }}"
          public_subnets: "{{ rosa_vpc_public_subnets }}"
          extra_tags: "{{ extra_tags }}"
          endpoints:
            gateway_endpoints: [s3]
            interface_endpoints: [sts,ec2,elasticloadbalancing]
      when: rosa_subnet_ids | default([]) | length == 0

    - name: roles/rosa_account_roles
      vars:
        rosa_account_roles:
          hosted_cp: "{{ rosa_hosted_cp }}"
          version: "{{ rosa_account_roles_version }}"
          prefix: "{{ rosa_account_roles_prefix }}"

    - name: roles/rosa_cluster
      vars:
        rosa_cluster:
          name: "{{ cluster_name }}"
          aws_account_id: "{{ aws_account_id }}"
          account_roles_prefix: "{{ rosa_account_roles_prefix }}"
          region: "{{ rosa_region }}"
          private_link: "{{ rosa_private_link }}"
          vpc_cidr: "{{ rosa_vpc_cidr }}"
          multi_az: "{{ rosa_multi_az }}"
          version: "{{ rosa_version }}"
          hosted_cp: "{{ rosa_hosted_cp }}"
          min_replicas: "{{ rosa_min_replicas }}"
          max_replicas: "{{ rosa_max_replicas }}"
          compute_nodes: "{{ rosa_compute_nodes | default(rosa_multi_az | ternary('3', '2')) }}"
          compute_machine_type: "m5.xlarge"
          kms_key_arn: "{{ rosa_kms_key_arn }}"
          tags: "{{ extra_tags }}"
          http_proxy: "{{ proxy_enabled | bool | ternary('http://'+(proxy_private_ip|default(''))+':3128', omit) }}"
          https_proxy: "{{ proxy_enabled | bool | ternary('http://'+(proxy_private_ip|default(''))+':3128', omit) }}"
          additional_trust_bundle_file: "{{ proxy_enabled | bool | ternary('roles/proxy_create/files/squid-ca-cert.pem', omit) }}" # "roles/proxy_create/files/squid-ca-cert.pem"
          no_proxy: "{{ proxy_enabled | bool | ternary(rosa_no_proxy|default(None), omit) }}"




