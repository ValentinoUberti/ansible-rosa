---
# tasks file for roles/jumphost_create

- name: make sure we have a subnet to use egress vpc
  set_fact:
    jumphost_subnet_id: "{{ egress_vpc_public_subnet_ids[0] }}"
    jumphost_vpc_id: "{{ egress_vpc_id }}"
  when:
    - jumphost_subnet_id is not defined
    - rosa_egress_vpc_enabled | bool

- name: make sure we have a subnet to use no egress vpc
  set_fact:
    jumphost_subnet_id: "{{ _public_subnet_ids[0] }}"
    jumphost_vpc_id: "{{ vpc_id }}"
  when:
    - jumphost_subnet_id is not defined
    - not rosa_egress_vpc_enabled | bool

- name: create ssh key pair
  ec2_key:
    name: "ROSA-{{ cluster_name }}-jumphost"
    region: "{{ rosa_region }}"
    key_material: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    tags: "{{ extra_tags }}"

- name: create ssh security group
  ec2_group:
    name: "ROSA-{{ cluster_name }}-jumphost-ssh"
    description: security group for SSH
    vpc_id: "{{ jumphost_vpc_id }}"
    region: "{{ rosa_region }}"
    tags: "{{ extra_tags }}"
    rules:
      - proto: tcp
        ports: [22]
        cidr_ip: 0.0.0.0/0
        rule_desc: allow ssh
      - proto: all
        cidr_ip: "{{ rosa_tgw_cidr | default(rosa_vpc_cidr) }}"
        rule_desc: allow all local

# jumphost_ami: ami-07b1d7739c91ed3fc
# jumphost_ami_name: "RHEL-8.3.0_HVM-*-x86_64-*Hourly*"

- block:
    - name: determine ami image for jumphost_ami_name
      ec2_ami_info:
        owners: 309956199498 # redhat
        region: "{{ rosa_region }}"
        filters:
          name: "{{ jumphost_ami_name }}"
      register: _jumphost_ami_facts

    - set_fact:
        jumphost_ami: "{{ _jumphost_ami_facts.images[0].image_id }}"
  when: jumphost_ami == ""

- name: start jumphost instance
  ec2_instance:
    name: "ROSA-{{ cluster_name }}-jumphost"
    region: "{{ rosa_region }}"
    key_name: "ROSA-{{ cluster_name }}-jumphost"
    vpc_subnet_id: "{{ jumphost_subnet_id }}"
    instance_type: "{{ jumphost_instance_type }}"
    security_group: "ROSA-{{ cluster_name }}-jumphost-ssh"
    user_data: "{{ lookup('file', 'user_data.sh') }}"
    network:
      assign_public_ip: true
    image_id: "{{ jumphost_ami }}"
    tags: "{{ extra_tags | combine({'Name': 'rosa-' + cluster_name + 'jumphost' }) }}"
    wait: true
  register: _jumphost

# - name: Add jumphost to Ansible inventory
#   ansible.builtin.add_host:
#     name: "{{ jumphost_dns }}"
#     groups: jumphost
#   changed_when: false

- block:
    - name: create private jumphost security group
      ec2_group:
        name: "ROSA-{{ cluster_name }}-private-jumphost"
        description: security group for ALL
        region: "{{ rosa_region }}"
        vpc_id: "{{ vpc_id }}"
        tags: "{{ extra_tags }}"
        rules:
          - proto: all
            cidr_ip: "{{ rosa_tgw_cidr }}"
            rule_desc: allow all local

    - name: start private jumphost instance
      ec2_instance:
        name: "ROSA-{{ cluster_name }}-private-jumphost"
        region: "{{ rosa_region }}"
        key_name: "ROSA-{{ cluster_name }}-jumphost"
        vpc_subnet_id: "{{ _private_subnet_ids[0] }}"
        instance_type: "{{ jumphost_instance_type }}"
        security_group: "ROSA-{{ cluster_name }}-private-jumphost"
        user_data: "{{ lookup('file', 'user_data.sh') }}"
        network:
          assign_public_ip: no
        image_id: "{{ jumphost_ami }}"
        tags: "{{ extra_tags | combine({'Name': 'rosa-' + cluster_name + '-private-jumphost' }) }}"
  when: jumphost_private_instance | bool


